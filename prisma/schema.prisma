// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  jobs      Job[]

  @@map("users")
}

model Job {
  id            Int          @id @default(autoincrement())
  userId        Int          @map("user_id")
  company       String
  position      String
  status        JobStatus    @default(applied)
  appliedDate   DateTime     @default(now()) @map("applied_date")
  offerDate     DateTime?    @map("offer_date")
  jobType       String?      
  source        String?      
  resumeUrl     String?      
  notes         String?
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")

  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  interviews    Interview[]

  @@map("jobs")
}

model Interview {
  id          Int       @id @default(autoincrement())
  jobId       Int       @map("job_id")
  type        String    
  date        DateTime  
  location    String?   
  notes       String?   
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  job         Job       @relation(fields: [jobId], references: [id], onDelete: Cascade)

  @@map("interviews")
}

enum JobStatus {
  applied
  interview
  offer
  rejected
  accepted
}
